using System;
using System.Collections.Generic;
using System.Linq;
using System.Web;
using System.Data.SqlClient;
using System.Configuration;
using System.Data;


namespace MVC_Project.Models
{
    public class StudentDBContext
    {
        String cs = ConfigurationManager.ConnectionStrings["DBCS"].ConnectionString;
        public List<Student> GetStudents()
        {
            List<Student> studentslist = new List<Student>();
            SqlConnection con = new SqlConnection(cs);
            SqlCommand cmd = new SqlCommand("spgetstudent",con);
            cmd.CommandType = CommandType.StoredProcedure;
            con.Open();
            SqlDataReader sdr = cmd.ExecuteReader();
            while (sdr.Read())
            {


                Student s = new Student();

                s.Student_id = Convert.ToInt32(sdr.GetValue(0).ToString());
                s.full_name = sdr.GetString(1);
                s.Mother_name = sdr.GetString(2);
                s.Gender = sdr.GetString(3);
                s.date_of_birth = sdr.GetString(4);
                s.student_mobile_no = sdr.GetString(5);
                s.parent_mobile_no = sdr.GetString(6);
                s.School_name = sdr.GetString(7);
                s.pancard_number = sdr.GetString(8);
                s.Branch = sdr.GetString(9);
                s.Address = sdr.GetString(10);

                studentslist.Add(s);
            }
              


            con.Close();

            return studentslist;
        }

        public bool insertdata(Student std)
        {
             
            SqlConnection con = new SqlConnection(cs);
            SqlCommand cmd = new SqlCommand("Sp_AddStudent", con);
            cmd.CommandType = CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("@name",std.full_name);
            cmd.Parameters.AddWithValue("@mother_name", std.Mother_name);
            cmd.Parameters.AddWithValue("@gender", std.Gender);
            cmd.Parameters.AddWithValue("@date_of_birth", std.date_of_birth);
            cmd.Parameters.AddWithValue("@student_mobile_no", std.student_mobile_no);
            cmd.Parameters.AddWithValue("@parent_mobile_number", std.parent_mobile_no);
            cmd.Parameters.AddWithValue("@School_Name", std.School_name);
            cmd.Parameters.AddWithValue("@pancard", std.pancard_number);
            cmd.Parameters.AddWithValue("@Branch", std.Branch);
            cmd.Parameters.AddWithValue("@address", std.Address);
            con.Open();
            int i = cmd.ExecuteNonQuery();
            con.Close();

            if (i > 0)
            { return true; }
            else 
            { return false; }









        }

        public bool UpdateStudent(Student std)
        {

            SqlConnection con = new SqlConnection(cs);
            SqlCommand cmd = new SqlCommand("sp_updatestudent", con);
            cmd.CommandType = CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("@id", std.Student_id);

            cmd.Parameters.AddWithValue("@name", std.full_name);
            cmd.Parameters.AddWithValue("@mother_name", std.Mother_name);
            cmd.Parameters.AddWithValue("@gender", std.Gender);
            cmd.Parameters.AddWithValue("@date_of_birth", std.date_of_birth);
            cmd.Parameters.AddWithValue("@student_mobile_no", std.student_mobile_no);
            cmd.Parameters.AddWithValue("@parent_mobile_number", std.parent_mobile_no);
            cmd.Parameters.AddWithValue("@School_Name", std.School_name);
            cmd.Parameters.AddWithValue("@pancard", std.pancard_number);
            cmd.Parameters.AddWithValue("@Branch", std.Branch);
            cmd.Parameters.AddWithValue("@address", std.Address);
            con.Open();
            int i = cmd.ExecuteNonQuery();
            con.Close();

            if (i > 0)
            { return true; }
            else
            { return false; }

        }

        public bool DeleteStudent(int id)
        {

            SqlConnection con = new SqlConnection(cs);
            SqlCommand cmd = new SqlCommand("sp_DeleteStudent", con);
            cmd.CommandType = CommandType.StoredProcedure;
            cmd.Parameters.AddWithValue("@id", id);

            
            con.Open();
            int i = cmd.ExecuteNonQuery();
            con.Close();

            if (i > 0)
            { return true; }
            else
            { return false; }

        }


    }
}
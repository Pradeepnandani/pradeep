@model MVC_Project.Models.Student
    @using MVC_Project.Models



@{
    ViewBag.Title = "Create";
}

<h2>Add Student</h2>
<div class="alert alert-primary" role="alert">
   All Fields Are Mandatoey(*)
</div>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">

        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

    </div>
    <div class="container">
        <div class="row">
            <div class="col-6">

                <div class="form-group">
                    @Html.LabelFor(model => model.full_name, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.full_name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.full_name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Mother_name, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Mother_name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Mother_name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Gender, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">

                        @Html.DropDownListFor(m => m.Gender,
                                    new SelectList(Enum.GetValues(typeof(Gender))),
                                    "Select Gender")
                        @Html.ValidationMessageFor(model => model.Gender, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.date_of_birth, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.date_of_birth, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.date_of_birth, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.student_mobile_no, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.student_mobile_no, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.student_mobile_no, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>
            <div class="col-6">
                <div class="form-group">
                    @Html.LabelFor(model => model.parent_mobile_no, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.parent_mobile_no, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.parent_mobile_no, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.School_name, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.School_name, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.School_name, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.pancard_number, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.pancard_number, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.pancard_number, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Branch, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Branch, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Branch, "", new { @class = "text-danger" })
                    </div>
                </div>

                <div class="form-group">
                    @Html.LabelFor(model => model.Address, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.Address, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.Address, "", new { @class = "text-danger" })
                    </div>
                </div>




            </div>

        </div>


    </div>

    <div style="margin-top:10px; margin-left:10px;">
        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Submit" class="btn btn-success" />

                @Html.ActionLink("Back to List", "Index")

            </div>
        </div>
    </div>



}



<script src="~/Scripts/jquery-3.4.1.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script>
    $(document).ready(function () {
        $(".date_of_birth").datepicker({
            dateFormat: "dd-mm-yy",
            changemonth: true,
            changeyear: true
        });
    });
</script>
